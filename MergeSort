public static int [] mergeSort(int [] array, int start, int end){
        if(start > end){ return new int [0];}
        if(start == end){
            int [] result = new int [1]; result[0] = array[start];
            return result;
        }
        int mid = (start + end)/2;
        int [] l1 = mergeSort(array, start, mid);
        int [] l2 = mergeSort(array, mid + 1, end);
        return mergeTwo(l1, l2);
    }
    public static int [] mergeTwo(int [] l1, int [] l2){
        int i = 0; int j = 0;
        int [] result = new int [l1.length + l2.length];  int k = 0;
        while(i != l1.length && j != l2.length){
            if(l1[i] > l2[j]){
               result[k] = l2[j]; j++;
            }
            else{
                result[k] = l1[i]; i++;
            }
            k++;
        }
        while(i != l1.length){
            result[k] = l1[i]; i++; k++;
        }
        while(j != l2.length){
            result[k] = l2[j]; j++; k++;
        }
        return result;
    }
